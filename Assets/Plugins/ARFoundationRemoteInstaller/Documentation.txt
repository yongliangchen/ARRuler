

Installation:
    1. If git is not installed on your machine, install it from here: https://git-scm.com/downloads
        For Windows: if Unity doesn't see your git installation, please setup git path variable: https://stackoverflow.com/questions/26620312/git-installing-git-in-path-with-github-client-for-windows
    2. ARFoundationRemoteInstaller will install AR Foundation Remote from git repository via Package Manager automatically after importing the plugin to Unity.
    3. If automatic installation fails, please fix all Console errors, then select an Assets/Plugins/ARFoundationRemoteInstaller/Installer.asset object and press InstallPlugin button.
    4. Install an AR Foundation Plug-in Provider (ARKit XR Plugin, ARCore XR Plugin, etc.) via Package Manager and ENABLE IT in Project Settings -> XR Plug-in Management. 
        Please choose the version compatible with AR Foundation 3.0.1. (For example, ARKit XR Plugin v3.0.1 or ARCore XR Plugin v3.0.1).
    5. To enable iOS face tracking, install ARKit Face Tracking 3.0.1 via Package Manager. 
    6. Video version: https://youtu.be/NpW-bZPoq18


How to use:
    1. Check that your existing AR project compiles and works correctly on your AR device.
    2. Enable AR Foundation Remote provider in Project Settings -> XR Plug-in Management -> PC, Mac & Linux Standalone.
            (This is only needed for Unity versions that support XR Management package v.3.2.10 or newer).
    3. Switch your project to the appropriate build target and press 'Assets/Plugins/ARFoundationRemoteInstaller/Installer-Install AR Companion app' button.
            Please ensure correct build target is selected.
            If your build target requires extension for making builds, add this extension to optionalCompanionAppExtension field.
            If installation of ARCompanion fails, please fix errors, and repeat the installation.
            Please DO NOT modify the scene in Assets/Plugins/ARFoundationRemoteInstaller/Scenes/ARCompanion.
    4. Run ARCompanion app on your AR device.
    5. Enter AR Companion app IP in Assets/Plugins/ARFoundationRemoteInstaller/Resources/Settings.asset.
    6. Run AR scene of your choice in the Editor (or any example scene from Assets/Plugins/ARFoundationRemoteInstaller/Scenes/Examples).
            Your AR device will NOT reflect changes made in Unity Editor. ARCompanion app serves only the purpose of sending AR data and touches back to Editor.
            Please note that all example scenes consist of pure ARFoundation components. No additional setup was needed for these scenes to work with the plugin.
    7. This warning is harmless and can be ignored in Editor: 'No active UnityEngine.XR.XRInputSubsystem is available'.
            It's not possible to create XRInputSubsystem in Editor and Unity warns that it's missing.
            If you get other 'No active SUBSYSTEM_NAME is available', it means the plugin does not currently support this AR feature.
    8. Leave an honest review on Asset Store and on forum :)


FAQ:  
    Q: How to update the plugin to a newer version?
    A: Press 'Installer-Un-install Plugin' button, delete the folder 'Assets/Plugins/ARFoundationRemoteInstaller', re-import the plugin, and make a new build of AR Companion app by pressing 'Installer-BuildAndRunCompanionApp' button.
    
    Q: Can I build AR Companion app from another (or newly created) project?
    A: Yes! Please ensure that your project has the same version of Unity and same packages (AR Foundation, AR Subsystems, etc.). 
    
    Q: I'm trying to run AR Foundation Samples scenes and input remoting doesn't work in SimpleAR and PlaneOcclusion scenes.
    A: These scenes use PlaceOnPlane.cs script which has #if UNITY_EDITOR define. Please remove this define to enable touch input in Editor.
 
    Q: How to connect iOS device to macOS Editor by wire?
    A: Typically, one of the IP addresses displayed in ARCompanion app is an IP of wired connection. Please disable Wi-Fi and there should be one IP left that corresponds to the wired connection.
    
    Q: How to change background video resolution?
    A: To change Editor camera background settings, please go to Assets/Plugins/ARFoundationRemoteInstaller/Resources/Settings.asset.
        Setting higher resolution scale will result in higher latency and lower frames-per-second.
        
    Q: Can I write a custom background video shader and test in the Editor?
    A:  iOS + Windows Unity Editor:
            Make a copy of ARKitBackgroundCustom.shader and modify it as you wish.
        iOS + macOS Unity Editor:
            Make a copy of ARKitBackground.shader and modify it as you wish.
            Please enable 'Project Settings/Player/PC, Mac & .../Other Settings/Rendering/Metal Editor Support'. 
        Android: 
            Unity Editor doesn't support shader features specific for Android (GL_OES_EGL_image_external_essl3, samplerExternalOES), so to test your custom video shader in Editor, 
                this shader should be compatible with both Android and Unity Editor. 
                But, as far as I know, it's not possible to write such shader because Windows/macOS Unity Editor can't run GLSLPROGRAM shaders.


How to uninstall:
    1. Press 'Installer-Delete AR Companion app build folder' button.
    2. Press 'Un-install Plugin' button.
    3. Delete the folder: Assets/Plugins/ARFoundationRemoteInstaller.
